name: Build pyodide/wasm wheels

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!*'
      - '*.py'
      - '!tests/**'
      - '!doc/**'
      - '!.github/**'
      - '.github/pyodide_meta.yaml'
      - '.github/pyodide_gsl_meta.yaml'
      - '.github/workflows/build_pyodide_wheels.yml'
  pull_request:
    branches:
      - main
    paths:
      - '**'
      - '!tests/**'
      - '!doc/**'
      - '!.github/**'
      - '.github/pyodide_meta.yaml'
      - '.github/pyodide_gsl_meta.yaml'
      - '.github/workflows/build_pyodide_wheels.yml'
  release:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build Python ${{ matrix.python-version }} Pyodide/wasm wheels
    runs-on: ubuntu-latest
    strategy:
        # Ensure that builds finish even if another fails
        fail-fast: false
        matrix:
          python-version:
            - "3.11"
            - "3.12"
            - "3.13"
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install pyodide-build
          echo EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version) >> $GITHUB_ENV
      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
      - name: Build wheel
        run: |
          # From https://github.com/pyodide/pyodide/issues/3002#issuecomment-1248513970
          # Set up libs dir and pkg config
          mkdir .libs
          export LIBDIR=`pwd`/.libs
          export PKG_CONFIG_PATH=`pwd`/.libs/lib/pkgconfig
          # Build gsl
          wget https://ftp.gnu.org/gnu/gsl/gsl-2.8.tar.gz
          tar -xvzf gsl-2.8.tar.gz
          cd gsl-2.8
          emconfigure ./configure \
              CFLAGS="-fPIC" \
              --prefix=$LIBDIR \
              --disable-dependency-tracking \
              --disable-shared
          emmake make -j 3
          emmake make install
          # Build galpy
          cd ..
          CFLAGS=`pkg-config --cflags-only-I --dont-define-prefix gsl` \
          LDFLAGS=`pkg-config --libs-only-L --dont-define-prefix gsl` \
          pyodide build
      - name: Copy wheels to 'latest' version
        run: |
          GALPY_VERSION="$(awk '/^current_version/{print $NF}' .bumpversion.cfg)"
          for f in dist/*$GALPY_VERSION*; do sudo cp -i -- "$f" "${f//$GALPY_VERSION/latest}"; done
      - uses: actions/upload-artifact@v5
        with:
          name: galpy-wheel-pyodide-${{ matrix.python-version }}
          path: dist/*.whl
# Upload to AWS S3
  deploy_s3:
    name: Upload to AWS S3
    if: (github.event_name != 'pull_request' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && github.event.action == 'created')
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v6
        with:
          path: wheelhouse/
      - uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-2'
          SOURCE_DIR: wheelhouse
          DEST_DIR: wheelhouse
